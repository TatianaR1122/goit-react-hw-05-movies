{"version":3,"file":"static/js/304.033dcb1f.chunk.js","mappings":"iQAGaA,EAAOC,EAAAA,GAAAA,IAAH,0CAIJC,EAAQD,EAAAA,GAAAA,GAAH,yCAILE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,EAAaH,EAAAA,GAAAA,GAAH,6CAIVI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kDAIRM,EAAaN,EAAAA,GAAAA,EAAH,qK,SCcvB,EAzBa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKL,EACpB,GAAE,KAGD,+BACE,UAACV,EAAD,YACE,SAACE,EAAD,8BACA,SAACC,EAAD,UACGM,EAAOO,KAAI,SAAAC,GAAK,OACf,SAACb,EAAD,WACE,SAACC,EAAD,CAAUa,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAAnD,UACE,SAACJ,EAAD,UAAaU,EAAMK,WAFNL,EAAME,GADR,UAW1B,C,+LClCKI,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMV,EAAW,mCAAG,oGACFU,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAU,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCN,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVI,EAAO,mCAAG,WAAMD,GAAN,uFACEL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeN,IAFjB,cACfE,EADe,yBAIdA,EAASC,KAAKK,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeN,IAFd,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,sDAOVM,EAAQ,mCAAG,WAAMC,GAAN,uFACCV,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBW,IAFrB,cAChBT,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Main = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: white;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  overflow: hidden;\n`;\n\nexport const LinkFilm = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  display: flex;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  text-align: center;\n  font-style: italic;\n  color: white;\n  color: black;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/Api';\nimport {\n  LinkFilm,\n  Main,\n  MoviesItem,\n  MoviesList,\n  MovieTitle,\n  Title,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <Main>\n        <Title>Trending today</Title>\n        <MoviesList>\n          {movies.map(movie => (\n            <MoviesItem key={movie.id}>\n              <LinkFilm to={`movies/${movie.id}`} state={{ from: location }}>\n                <MovieTitle>{movie.title}</MovieTitle>\n              </LinkFilm>\n            </MoviesItem>\n          ))}\n        </MoviesList>\n      </Main>\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'ecbb02bdf25345a36505e43f9c0e7ce1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n"],"names":["Main","styled","Title","MoviesList","MoviesItem","LinkFilm","Link","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","getTrending","then","map","movie","to","id","state","from","title","API_KEY","axios","response","data","results","getDetails","movieId","getCast","cast","getReviews","getQuery","query"],"sourceRoot":""}