{"version":3,"file":"static/js/364.afea8807.chunk.js","mappings":"6QAGaA,EAASC,EAAAA,GAAAA,OAAH,4fA0BNC,EAASD,EAAAA,GAAAA,IAAH,kLASNE,EAAMF,EAAAA,GAAAA,IAAH,gFAMHG,EAAQH,EAAAA,GAAAA,IAAH,8CAILI,EAAYJ,EAAAA,GAAAA,GAAH,8CAITK,EAAQL,EAAAA,GAAAA,EAAH,6FAMLM,EAAQN,EAAAA,GAAAA,GAAH,+CAILO,EAAcP,EAAAA,GAAAA,KAAH,+IASXQ,EAAQR,EAAAA,GAAAA,GAAH,yKAULS,EAAMT,EAAAA,GAAAA,IAAH,2GAWHU,GALOV,EAAAA,GAAAA,EAAH,oEAKOA,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,oJ,SChBrB,EA3DsB,WAAO,IAAD,EAClBY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAMhD,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWZ,GAASa,KAAKT,EAC1B,GAAE,CAACJ,IAECG,GAIH,iCACE,SAAC,KAAD,CAAMW,GAAIP,EAASQ,QAAnB,UACE,SAAC5B,EAAD,CAAQ6B,KAAK,SAAb,iCAGF,UAAC3B,EAAD,YACE,SAACC,EAAD,CACE2B,IACGd,EAAMe,YAAN,8CAA2Df,EAAMe,aAEpEC,IAAKhB,EAAMiB,MACXC,MAAM,SAER,UAAC9B,EAAD,YACE,UAACC,EAAD,WACGW,EAAMiB,MADT,KACkB,IAAIE,KAAKnB,EAAMoB,cAAcC,cAD/C,QAGA,UAAC/B,EAAD,0BAAoBgC,KAAKC,MAA2B,GAArBvB,EAAMwB,cAArC,QACA,UAACjC,EAAD,uBAEE,SAACC,EAAD,UAAcQ,EAAMyB,cAErBzB,EAAM0B,SACL,iCACE,SAACnC,EAAD,sBACA,SAACE,EAAD,UACGO,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADM,gBASjC,UAACpC,EAAD,YACE,SAACC,EAAD,CAAUgB,GAAI,OAAd,mBACA,SAAChB,EAAD,CAAUgB,GAAI,UAAd,yBAEF,SAAC,EAAAoB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UA3CG,uCA+CV,C,+LCzEKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKX7B,EAAU,mCAAG,WAAMZ,GAAN,uFACDqC,EAAAA,EAAAA,IAAA,gBAAmBrC,EAAnB,oBAAsCoC,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVE,EAAO,mCAAG,WAAM1C,GAAN,uFACEqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACeoC,IAFjB,cACfG,EADe,yBAIdA,EAASC,KAAKG,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAM5C,GAAN,uFACDqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACeoC,IAFd,cAClBG,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,sDAOVI,EAAQ,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBU,IAFrB,cAChBP,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","services/Api.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  min-width: 150px;\n  margin: 10px 0;\n  padding: 10px 15px;\n  background-color: transparent;\n  border: 2px solid white;\n  text-decoration: none;\n  text-align: center;\n  text-transform: uppercase;\n  cursor: pointer;\n  font-size: 0.95em;\n  font-weight: 600;\n  line-height: 1;\n  border-color: white;\n  color: #fff;\n  transition: all 150ms ease-in-out;\n  &:hover {\n    background-color: #90cea1;\n    color: #fff;\n    outline: 0;\n  }\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport const Movies = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  padding-top: 20px;\n  border-bottom: 1px solid #fff;\n  border-top: 1px solid #fff;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const About = styled.div`\n  margin-left: 20px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin-top: -10px;\n`;\n\nexport const Score = styled.p`\n  margin-top: -10px;\n  margin-bottom: 20px;\n  font-style: italic;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const Description = styled.span`\n  display: block;\n  margin-top: 5px;\n  color: #fff;\n  font-size: 16px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport const Genre = styled.ul`\n  display: flex;\n  align-items: center;\n  font-style: italic;\n  li:not(:last-child)::after {\n    content: ',';\n    margin-right: 5px;\n  }\n`;\n\nexport const Nav = styled.div`\n  padding-bottom: 15px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid #fff;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 18px;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  padding: 12px;\n  text-decoration: none;\n  color: white;\n  font-size: 18px;\n  &:active {\n    color: #e3f309cb;\n  }\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getDetails } from 'services/Api';\nimport {\n  About,\n  Button,\n  Description,\n  Genre,\n  Img,\n  InfoLink,\n  MainTitle,\n  Movies,\n  Nav,\n  Score,\n  Title,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backPage = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <Link to={backPage.current}>\n        <Button type=\"button\"> &#60;&ensp; Go back</Button>\n      </Link>\n\n      <Movies>\n        <Img\n          src={\n            (movie.poster_path = `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`)\n          }\n          alt={movie.title}\n          width=\"250\"\n        />\n        <About>\n          <MainTitle>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </MainTitle>\n          <Score>User Score: {Math.floor(movie.vote_average * 10)}%</Score>\n          <Title>\n            Overview\n            <Description>{movie.overview}</Description>\n          </Title>\n          {movie.genres && (\n            <>\n              <Title>Genres</Title>\n              <Genre>\n                {movie.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </Genre>\n            </>\n          )}\n        </About>\n      </Movies>\n\n      <Nav>\n        <InfoLink to={'cast'}>Cast</InfoLink>\n        <InfoLink to={'reviews'}>Reviews</InfoLink>\n      </Nav>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'ecbb02bdf25345a36505e43f9c0e7ce1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n"],"names":["Button","styled","Movies","Img","About","MainTitle","Score","Title","Description","Genre","Nav","InfoLink","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","backPage","useRef","state","from","useEffect","getDetails","then","to","current","type","src","poster_path","alt","title","width","Date","release_date","getFullYear","Math","floor","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","API_KEY","axios","getTrending","response","data","results","getCast","cast","getReviews","getQuery","query"],"sourceRoot":""}